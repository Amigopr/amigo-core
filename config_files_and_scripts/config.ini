# Endpoint for P2P node to listen on
# p2p-endpoint = 
p2p-endpoint=0.0.0.0:11010
# P2P nodes to connect to on startup (may specify multiple times)
# seed-node = 

# JSON array of P2P nodes to connect to on startup
# seed-nodes = 
seed-nodes = ["39.104.200.181:11010", "39.108.185.73:11010"]

# Pairs of [BLOCK_NUM,BLOCK_ID] that should be enforced as checkpoints.
# checkpoint = 

# Endpoint for websocket RPC to listen on
# rpc-endpoint = 
rpc-endpoint = 0.0.0.0:11011
# Endpoint for TLS websocket RPC to listen on

# The TLS certificate file for this server

# Password for this certificate
# server-pem-password = 

# File to read Genesis State from
# genesis-json = 
genesis-json = /data/amigo/console/agc-genesis.json
# Block signing key to use for init witnesses, overrides genesis file
# dbg-init-key = 

# JSON file specifying API permissions
# api-access = 

# Enable block production, even if the chain is stale.
enable-stale-production = false

# Percent of witnesses (0-99) that must be participating in order to produce blocks
required-participation = false

# ID of witness controlled by this node (e.g. "1.6.5", quotes are required, may specify multiple times)
# witness-id = 
witness-id = "1.6.5"


# Tuple of [PublicKey, WIF private key] (may specify multiple times)
private-key = ["AGC6MRyAjQq8ud7hVNYcfnVPJqcVpscN5So8BhtHuGYqET5GDW5CV","5KQwrPbwdL6PhXujxW37FSSQZ1JiwsST4cqQzDeyXtP79zkvFD3"]

# Account ID to track history for (may specify multiple times)
# track-account = 

# Keep only those operations in memory that are related to account history tracking
# partial-operations = 

# Maximum number of operations per account will be kept in memory
# max-ops-per-account = 

# Track market history by grouping orders into buckets of equal size measured in seconds specified as a JSON array of numbers
bucket-size = [15,60,300,3600,86400]

# How far back in time to track history for each bucket size, measured in the number of buckets (default: 1000)
history-per-size = 1000

# declare an appender named "stderr" that writes messages to the console
[log.console_appender.stderr]
stream=std_error

# declare an appender named "p2p" that writes messages to p2p.log
[log.file_appender.p2p]
filename=logs/p2p/p2p.log

# declare biz log
[log.file_appender.biz]
filename=logs/biz/biz.log

# filename can be absolute or relative to this config file

# route any messages logged to the default logger to the "stderr" logger we
# declared above, if they are info level are higher
[logger.default]
level=info
appenders=biz

# route messages sent to the "p2p" logger to the p2p appender declared above
[logger.p2p]
level=info
appenders=p2p
